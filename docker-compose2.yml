version: "3.3"

services:
    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: nginx_proxy
        restart: always
        ports: 
            - "80:80"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - /data/certs/:/etc/nginx/certs:ro
            - /etc/nginx/vhost.d
            - /usr/share/nginx/html
            - ./nginx/proxy/:/etc/nginx/conf.d/:rw
            - ./logs/proxy/nginx-error.log:/var/log/nginx/error.log:rw
            - ./logs/proxy/nginx-access.log:/var/log/nginx/access.log:rw

        labels:
            - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_prox
        networks:
            - webnet            
            
    nginx-front:
        image: tutum/nginx
        container_name: nginx_front
        restart: always
        volumes:
            - ./frontend:/app
            - ./logs/front/nginx-error.log:/var/log/nginx/error.log
            - ./logs/front/nginx-access.log:/var/log/nginx/access.log
        expose:
            - 80
        environment:
            - VIRTUAL_HOST= localhost, thk-pc-01
        networks:
            - webnet            
                            
    nginx-back:
        image: tutum/nginx
        container_name: nginx_back
        restart: always

        links:
            - phpfpm
        volumes:
            - ./nginx/back/default:/etc/nginx/sites-available/default
            - ./nginx/back/default:/etc/nginx/sites-enabled/default

            - ./logs/back/nginx-error.log:/var/log/nginx/error.log
            - ./logs/back/nginx-access.log:/var/log/nginx/access.log

        expose:
            - 8080
            
        environment:
            - VIRTUAL_HOST=127.0.0.1, 192.168.0.53

        networks:
            - webnet            
    

    phpfpm:
        image: php:7-fpm
        container_name: php7_fpm
        restart: always
        expose:
            - 9000
        volumes:
            - ./backend:/usr/share/nginx/html
        networks:
            - webnet            
    
    node-api:
        image: node:12
        container_name: node_api
        restart: always
        ports: 
            - "8001:8001"
        volumes: 
            - ./nodebackend:/app
        environment:
            - DB_CONNECT=mongodb+srv://tenhitokiri:En1el2es1@cluster0-zfj4f.mongodb.net/jwt?retryWrites=true&w=majority
            - PORT=8001
            - TOKEN_SECRET=slkdjfsladkfjlsdae
        
        working_dir: /app
        command: bash -c "npm install && npm run dev"
        networks:
            - webnet            

networks:
    webnet:            
    
